plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.kbs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'

    // lombok
    implementation 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //rabbitmq 관련 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'

    //mongodb 관련 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // Unirest 관련 라이브러리
    implementation 'com.konghq:unirest-java:3.13.8'

    // Aho Corasick 라이브러리
    implementation 'org.ahocorasick:ahocorasick:0.6.3'

    // lang 라이브러리
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    // guava 라이브러리
    implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'

    // redis 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // kafka 라이브러리
    implementation 'org.springframework.kafka:spring-kafka'

    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:5.0.0"
    implementation "com.querydsl:querydsl-apt:5.0.0"

    //joda-time
//    경고문구 재현을 위한 추가 : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type; You might want to check your annotation setup at the converter implementation
    implementation group: 'joda-time', name: 'joda-time', version: '2.3'

    // valid 사용
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
}

tasks.named('test') {
    useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl" as Object

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    compileOnly {
        querydsl.extendsFrom compileClasspath
    }
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝